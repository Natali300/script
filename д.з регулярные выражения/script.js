// Задание 1 (Лёгкое) 
// Тема: Проверка правильности пути к изображению
// Формулировка:
// Уважаемые студенты! Вам необходимо написать функцию на JavaScript, 
// которая проверяет, является ли переданная строка корректным путем к изображению
// в формате .jpg, .jpeg, .png или .gif. 
// Строка считается корректной, если она заканчивается на одно из расширений,
// причём регистр букв не имеет значения. Используйте регулярные выражения для проверки.
// Функция должна возвращать true, если путь правильный, и false, если нет.

const pattern = /\.(jpg|jpeg|png|gif)$/i;
const text1 = "филин.jpg";
console.log(pattern.test(text1));
// Задание 2 (Лёгкое) 
// Тема: Проверка правильности имени файла с ограничением на расширения 
// Формулировка: 
// Уважаемые студенты! Напишите функцию на JavaScript, которая проверяет, 
// является ли переданная строка корректным именем файла для загрузки на сайт. 
// Требования: 
// ● Имя файла должно состоять из латинских букв (a-z, A-Z), 
// цифр и знаков подчёркивания (_). 
// ● Имя обязательно должно иметь расширение .html, .css или .js. 
// ● Никаких пробелов в имени файла быть не должно. Функция должна возвращать true, 
// если файл подходит, и false, если нет. 
const pattern2 = /^[A-Za-z0-9_]+(\.(html|css|js))$/;
const text2 = "indexPrimer1.html";
console.log(pattern2.test(text2));

// Задание 3 (Среднее) 
// Тема: Выделение всех ссылок из HTML-кода 
// Формулировка: 
// Уважаемые студенты! Вам необходимо создать функцию на JavaScript, 
// которая принимает строку с HTML-кодом и с помощью регулярного выражения извлекает 
// все ссылки из атрибутов href тегов <a>. Необходимо вернуть массив всех найденных 
// ссылок. Считаем, что атрибуты href всегда пишутся в двойных кавычках ("). 

function poiscSsilok(html){
    const pattern3 = /href="([^"]*)"/g;
    let mass = [];
    let match;
    while ((match = pattern3.exec(html)) !== null) {
        mass.push(match[1]); // match[1] содержит URL
    }
    return mass;
}
    let element = document.getElementById("ssilka"); // Получаем элемент по его ID
    if(element){
    let htmlCod = element.innerHTML; // Получаем HTML-содержимое этого элемента
    let ssilkas = poiscSsilok(htmlCod); // Передаем HTML-содержимое в функцию
    console.log(ssilkas); // Выводим массив найденных ссылок в консоль
}else{
    console.log("ошибка");
}

 

// Задание 4 (Сложное) 
// Тема: 
// Валидация и автоподстановка телефонного номера Формулировка: 
// Уважаемые студенты! Вам необходимо создать функцию на JavaScript, 
// которая принимает строку с номером телефона пользователя. 
// Требования: 
// ● Номер может быть введён пользователем в любом виде: с пробелами, без пробелов, 
// с дефисами, без дефисов, с плюсом в начале или без. 
// ● Ваша задача —: 
// 1. Проверить с помощью регулярного выражения, что номер состоит только из 
// допустимых символов (цифры, пробелы, дефисы, круглые скобки и опциональный + в начале). 
// 2. Очистить номер от всех символов, кроме цифр. 
// 3. Вернуть номер в формате +7XXXXXXXXXX, где X — цифры. Если номер невозможно 
// привести к такому формату (например, цифр слишком мало или слишком много),
// функция должна вернуть строку 'Неверный номер'. 

function phoneNumber(number) {
    const pattern4 = /^\+?[\d\s\-()]*$/;
    if (!pattern4.test(number)) {
        return "Неверный номер"; // Возвращаем сообщение об ошибке
    }

    const clearTheNumber = number.replace(/[^\d]/g, ''); // Оставляем только цифры

    if (clearTheNumber.length === 10) {
        return `+7${clearTheNumber}`; // Форматируем номер в +7XXXXXXXXXX
    } else if (clearTheNumber.length === 11) {
        const formattedNumber = clearTheNumber.replace(/^8/, ''); // Убираем '8' в начале
        if (formattedNumber.length === 10) {
            return `+7${formattedNumber}`; 
        } else {
            return "Неверный номер"; // Если чисел не 10 
        }
    } else {
        return "Неверный номер"; // Если чисел не 11 
    }
}

let enterNumber = prompt("Введите номер телефона");
alert(phoneNumber(enterNumber));